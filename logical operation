<!DOCTYPE html>
<html>
  <head>
    <title>
      LOGICAL Operation
  </title>
</head>
  <body>
    <!--
      We re learning the frist one called the AND OPERATOR &&
      NOte in order of operator logical operation have a lower priority compare to math ad boolean so in he below eg the math re clavulated firstthen to the comparison then the logical operation

      the next one is OR operator(||)....it checj of atleat one side is true os if it true true or flase true or true false all the output will be true but will be false when it false false

      the enxt one is NOT Opeerator(!)
      this use one boolean value and flip it into the opposite value so for !true the output is false and for !false the output is true
    -->


    <!--
      THe trusty and falsy values
      if statement desont kust work with boolean value but work with any type of values including number and strings
      let for instance we run  this code
      if(5){
        console.log('trusty')
      } 
      the  output is trusty...it behave just like true,it causes the if statement to run the code...this value 5 in this code is called a truthy value cux it behave like true.....so if we change it to 0 this value wont run the code cuz it will behave like false
      if(0){
        console.log('trusty')
      } 
      no output...so 0 is a falsy value

      0 is not only the flasy value in js
      we have others which re\;
      false,''(empty string),0,undefined,nan,null and other values apart from this is a truthy value

      we use falsy and truthy value as shortcut in our code e.g
      let create a a variable cartQuantity
      cartQuantity =5;
      if(){
        console.log('cart has a product')
      }
      let say we want to display the mssg oly if cart has product..we can use the boolena like if(cartQuantity>0){
        console.log('cart has a product')
      }
      but instaed of this we can justb type cartQuantity...sinc cartAuantity is not zero they will both behave like true and if the cartQuantity is both zero they will both behave like false...so in our code the cartQuanttity is 5 which is truthy value so this causes the if statement to run the code...so instead of doing comparsion we can use truthy and falsy value has shortcut


      Let learn the NAN which is also a falsy value...NAN mean Not A Number
      we get nan when do some invalid math e.g console.log('text'/5) the out is NAN CUZ IT not a valid math so the result is nan
      Next one is undfined this means something doesnt have a value...e.g
      if we crate a variable and doesnt give it value
      ;et variable
      console.log\(variable)


      Short cut for if statement:
      which re called 
      1)Ternary Operator ?;
      2)Guard Operator &&;
      3)Default Operator ||;

      true ? 'truthy' : 'falsy'
      this is the ternary operator similar to if else staement
      the first value is the condition if it is truthy the result of the code is the value after the question mark if the frist value is falsy the result of the code is the value after the colon(:)
      so u can think of the ? as the if branch and the colon the else branch ..this is like a short cut for if statement like dis
      if(true){
        'truthy'
      }else{
        'falsy'
      }

      the advantage of ternary operator over if statemnt is that we can save a ternary operator in a varibale..so we can do
      const result= true ? 'truthy' : 'falsy';
      and if we console.log(result)...the output is the condition that is true which is truthy
      .As alway we can use the truthy or falsy value
      let change the true to a falsy value like 0
      const result= 0 ? 'truthy' : 'falsy';
      this will cause the value after the colon to be outputed cuz it false

      nEXT IS Guard operator(&&)...welearnt the AND opearor which check if both side a true....the AND operator has specila feature..if we have false && true.. sinve the first code is false the output will be false and wont borther runnig the code on the right(it stop early)..this is called a short circult evaluation

      false && console.log('hello')
      here the left side is false so the code stop early...so we can use the value on the left to block or gurad the value on the right...so we called it the Guard operator
      the above code is the shortcut for this
      if(condition){
        console.log('hello');
      }

      we can save the guard operaot in a variabe

      the last one is the Defualt oPERATOR||
      IT IS SIMLAR TO THE GURAD OPERATOR BUT IT USES OR operator...whch we will leanrt early
      thus check if one side is truthy
      it also stop early or shor curcult...in the sense that if the left value is true no need to chck the riht value so it stop early

      let crate a variable currency
      const currency ='EUR' || 'USD' 
      SO LET SAY HOOSING CURRENCY IS OPTIONAL AND IF WE DONT CHOOSE A CURRINEY WE USE A DEFUALT VALUE USD..so to create a default value we can go to the end of the code and type || 'USD'
      SO in the code left side is truthy so the or opertaor will stop at the left side
      so if we console.log(currency); it will display EUR
      so let show if we didnt choose any value i.e we chnage the EUR to undefined now the left side is falsy and the short circult is not used and it will continue and the value will be the value at the right which is USD
    -->

    <script>
      /*
      console.log(true && true)//and operator check if two booleanvalue re both true l,e if the right and left eide re through so the output is true but if or of the side is false the and operator i]will return false
      console.log(true && false);//OUTPUT IS FALSE
      console.log(0.2 >= 0 && 0.2 < 1/3);//let assumed wwe genrate a random number and it 0.2 and we want to check if the  random number is less than 1/3 and the output here is that is true cuz 0.2 is btw 0 amd 1/3

      //the next is OR operator
      console.log(true || false); //output is true cuz one is true
      console.log(!true);// not true so it false
      console.log(!false);//not flase so it true

      if(5){
        console.log('truthy')//there is output
      }
      if(0){
        console.log('falsy')//no output
      }

      const cartQuantity=5
      if(cartQuantity>0){
        console.log('cart has a product')
      }//instead of this we can just have
      if(cartQuantity){
        console.log('cart has a product')//we produce same output
      }
      //truthy and falsy also work with logical operators eg
      console.log(!0);//this is not 0 AND THE ANSWERF WILL BE TRUE CUX 0 I FALSY VALUE
      console.log('text'/5)//the out is nan

      let variable;
      console.log(variable)//this will return undefined cuz the variable has no value...we can only use the let syntax in undefined we cant ue const..but if we want to use it in const we have to type out =undefined
      const variable2=undefined;*/

/*
      true ? 'truthy' : 'falsy'//this is the ternary operator similar to if else staement
      if(true){
        'truthy'
      }else{
        'falsy'
      }//same as the top

      const result= true ? 'truthy' : 'falsy';//puuting it inside a variable
      console.log(result)


      let result3;

      if(condition){
        result3='truthy';
      }else{
        result3='falsy'
      }//same has the immediate above ternary operator code


      const result2= 0 ? 'truthy' : 'falsy';
      console.log(result2)//using falsy value 
      */


      false && console.log('hello')//here the left side is false so the code stop early...so we can use the value on the left to block or gurad the value on the right...so we called it the Guard operator
      const message= false && 'hello';//store it in a variable
      console.log(message);//the value false will be outputed
      ///so we change the false to  truthy value 5..it will not stop earlya nd it will give us the second value as the result
      const message2= 6 && 'hellow'
      console.log(message2)
      /*let message2;
      if(condition){
        message2='hellow'
      }*/ //the above is the shotcut for this

      /*
      const currency ='EUR' || 'USD';
      console.log(currency);// THE lwft value is returned cux it is truth and stop 
      */
      const currency = undefined || 'USD'
      console.log(currency) //as u can see we an use the or operaor to set   default value...so we called it default opertor when we use the OR operator like dis

      /*let currency;
      if(!currency){
        currency ='USD'
      }*/
      //THE or opertor is the shortcut for this if statemnti
    </script>
  </body>
</html>
